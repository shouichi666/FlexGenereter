{"version":3,"sources":["components/atoms/Text.tsx","components/block/SettingItemText.tsx","components/atoms/AddButton.tsx","components/atoms/RemoveButton.tsx","components/atoms/CssButton.tsx","components/atoms/RadioButton.tsx","hooks/index.ts","stores/slices/flexSlice.ts","stores/slices/modalSlice.ts","components/modules/Controller.tsx","components/style/color.ts","components/block/Header.tsx","components/block/FlexChild.tsx","components/block/ViewCode.tsx","stores/slices/countSlice.ts","components/modules/FlexParent.tsx","App.tsx","stores/index.ts","serviceWorker.ts","index.tsx"],"names":["Text","React","memo","text","fontSize","textAlign","P","fontSizeR","textAlignR","styled","p","undefined","SettingItemText","subText","Box","Space","div","useStyles","makeStyles","theme","createStyles","root","background","border","borderRadius","boxShadow","color","height","width","padding","AddButton","onClick","classes","Button","className","RemoveButton","CssButton","RadioButton","checked","onChange","RadioButtonContainer","Radio","type","value","readOnly","RadioButtonC","name","input","button","useAppDispatch","useDispatch","useAppSelector","useSelector","flexSlice","createSlice","initialState","display","flexDirection","justifyContent","alignContent","flexWrap","alignItems","reducers","updataDisplay","state","action","payload","updataFlexDirection","updataJustifyContent","updataAlignItems","updataFlexWrap","updataAlignContent","actions","modalSlice","open","openModal","Controller","dispatch","flex","onClickUpdataDisplay","event","target","outerText","onClickUpdataFlexDirection","onClickUpdataJustifyContent","onClickUpdataAlignItems","onClickUpdataFlexWrap","onClickUpdataAlignContent","Wrapper","List","Row","RowTop","RowBottom","Center","ul","li","HeaderC","header","Title","h1","Header","BlockBox","child","i","Block","String","isOpen","Overlay","Container","ViewCode","codeString","language","style","a11yDark","countSlice","flexChild","addFlexChild","addNumber","length","removeFlexChild","newArray","pop","FlexParent","flexChilds","count","FlexWrapper","displayS","map","FlexChild","ButtonWrapper","Flex","FlexLeft","FlexRight","App","modalState","modal","store","configureStore","reducer","modalDlice","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.267cd885.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\ntype textProps = {\r\n  text: string | null;\r\n  fontSize: number;\r\n  textAlign?: string;\r\n};\r\n\r\nconst Text: React.FC<textProps> = React.memo(({ text, fontSize, textAlign }) => {\r\n  return (\r\n    <P fontSizeR={fontSize} textAlignR={textAlign}>\r\n      {text}\r\n    </P>\r\n  );\r\n});\r\n\r\nexport const P = styled.p<{\r\n  fontSizeR: number;\r\n  textAlignR: string | undefined;\r\n}>`\r\n  text-shadow: 0 3px 5px rgb(41 38 135 / 67%);\r\n  color: #fff;\r\n  font-size: ${({ fontSizeR }) =>\r\n    typeof fontSizeR === \"number\" ? fontSizeR : 10}px;\r\n  text-align: ${({ textAlignR }) =>\r\n    textAlignR === undefined ? \"left\" : \"center\"};\r\n`;\r\n\r\nexport default Text;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Text from \"../atoms/Text\";\r\n\r\ntype propType = {\r\n  text: string;\r\n  subText: string;\r\n};\r\n\r\nconst SettingItemText: React.FC<propType> = React.memo(({ text, subText }) => {\r\n  return (\r\n    <Box>\r\n      <Text text={text} fontSize={18} textAlign='center' />\r\n      <Space />\r\n      <Text text={subText} fontSize={8} textAlign='center' />\r\n    </Box>\r\n  );\r\n});\r\n\r\nconst Box = styled.div`\r\n  display: flex;\r\n  align-items: baseline;\r\n  justify-content: left;\r\n`;\r\n\r\nconst Space = styled.div`\r\n  width: 10px;\r\n`;\r\n\r\nexport default SettingItemText;\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      background:\r\n        \"linear-gradient(45deg, rgba( 232, 218, 74, 0.30 ) 30%, rgba( 74, 91, 232, 0.50 ) 80%)\",\r\n      border: 0,\r\n      borderRadius: 5,\r\n      boxShadow: \"0 3px 5px 2px rgba(255, 105, 135, .3)\",\r\n      color: \"white\",\r\n      height: \"50px\",\r\n      width: \"50px\",\r\n      padding: \"0\",\r\n    },\r\n  })\r\n);\r\n\r\ntype propType = {\r\n  onClick?: () => void;\r\n};\r\n\r\nconst AddButton: React.FC<propType> = React.memo(({ onClick }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Button className={classes.root} onClick={onClick}>\r\n      <AddIcon />\r\n    </Button>\r\n  );\r\n});\r\n\r\nexport default AddButton;\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      background:\r\n        \"linear-gradient(45deg, rgba( 232, 218, 74, 0.30 ) 30%, rgba( 74, 91, 232, 0.50 ) 80%)\",\r\n      border: 0,\r\n      borderRadius: 5,\r\n      boxShadow: \"0 3px 5px 2px rgba(255, 105, 135, .3)\",\r\n      color: \"white\",\r\n      height: \"50px\",\r\n      width: \"50px\",\r\n      padding: \"0\",\r\n    },\r\n  })\r\n);\r\n\r\ntype propType = {\r\n  onClick?: () => void;\r\n};\r\n\r\nconst RemoveButton: React.FC<propType> = React.memo(({ onClick }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Button className={classes.root} onClick={onClick}>\r\n      <RemoveIcon />\r\n    </Button>\r\n  );\r\n});\r\n\r\nexport default RemoveButton;\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      background:\r\n        \"linear-gradient(45deg, rgba( 232, 218, 74, 0.30 ) 30%, rgba( 74, 91, 232, 0.50 ) 80%)\",\r\n      border: 0,\r\n      borderRadius: 5,\r\n      boxShadow: \"0 3px 5px 2px rgba(255, 105, 135, .3)\",\r\n      color: \"white\",\r\n      height: \"50px\",\r\n      width: \"200px\",\r\n      padding: \"0\",\r\n    },\r\n  })\r\n);\r\n\r\ntype propType = {\r\n  onClick: () => void;\r\n};\r\n\r\nconst CssButton: React.FC<propType> = ({ onClick }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Button className={classes.root} onClick={onClick}>\r\n      CSS\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default CssButton;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\ntype propType = {\r\n  text: string;\r\n  checked?: string;\r\n  onChange?: (event: any) => void;\r\n  onClick?: (event: any) => void;\r\n};\r\n\r\nconst RadioButton: React.FC<propType> = React.memo(\r\n  ({ text, checked, onChange, onClick }) => {\r\n    return (\r\n      <RadioButtonContainer>\r\n        <Radio\r\n          type='radio'\r\n          value={text}\r\n          checked={text === checked ? true : false}\r\n          onChange={onChange}\r\n          readOnly\r\n        />\r\n        <RadioButtonC onClick={onClick} name={text}>\r\n          {text}\r\n        </RadioButtonC>\r\n      </RadioButtonContainer>\r\n    );\r\n  }\r\n);\r\n\r\nconst RadioButtonContainer = styled.div`\r\n  width: 100%;\r\n  margin: 0 1px;\r\n  border-radius: 5px;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst Radio = styled.input`\r\n  display: none;\r\n\r\n  &:checked + button {\r\n    color: #fff;\r\n    transition: 0.2s;\r\n    background-color: rgba(12, 19, 81, 0.6);\r\n  }\r\n`;\r\n\r\nconst RadioButtonC = styled.button`\r\n  padding: 4px 2px;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: transparent;\r\n  border: none;\r\n  color: rgba(195, 200, 241, 0.6);\r\n  cursor: pointer;\r\n  transition: 0.1s;\r\n  display: inline-block;\r\n  text-align: center;\r\n\r\n  &:hover {\r\n    color: #fff;\r\n    transition: 0.2s;\r\n    background-color: rgba(12, 19, 81, 0.6);\r\n  }\r\n`;\r\nexport default RadioButton;\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\r\nimport type { RootState, AppDispatch } from \"../stores/index\";\r\n\r\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\ntype flexStateType = {\r\n  display: string | any;\r\n  flexDirection: string;\r\n  justifyContent: string;\r\n  flexWrap: string;\r\n  alignContent: string;\r\n  alignItems: string | any;\r\n};\r\n\r\nconst initialState: flexStateType = {\r\n  display: \"flex\",\r\n  flexDirection: \"row\",\r\n  justifyContent: \"flex-start\",\r\n  alignContent: \"flex-start\",\r\n  flexWrap: \"nowrap\",\r\n  alignItems: \"normal\",\r\n};\r\n\r\nconst flexSlice = createSlice({\r\n  name: \"flexState\",\r\n  initialState,\r\n  reducers: {\r\n    updataDisplay: (state, action) => {\r\n      state.display = action.payload;\r\n    },\r\n    updataFlexDirection: (state, action) => {\r\n      state.flexDirection = action.payload;\r\n    },\r\n    updataJustifyContent: (state, action) => {\r\n      state.justifyContent = action.payload;\r\n    },\r\n    updataAlignItems: (state, action) => {\r\n      state.alignItems = action.payload;\r\n    },\r\n    updataFlexWrap: (state, action) => {\r\n      state.flexWrap = action.payload;\r\n    },\r\n    updataAlignContent: (state, action) => {\r\n      state.alignContent = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  updataDisplay,\r\n  updataFlexDirection,\r\n  updataJustifyContent,\r\n  updataAlignItems,\r\n  updataFlexWrap,\r\n  updataAlignContent,\r\n} = flexSlice.actions;\r\nexport default flexSlice.reducer;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\ntype modalStateType = {\r\n  open: boolean;\r\n};\r\n\r\nconst initialState: modalStateType = {\r\n  open: false,\r\n};\r\n\r\nconst modalSlice = createSlice({\r\n  name: \"modal\",\r\n  initialState,\r\n  reducers: {\r\n    openModal: (state) => {\r\n      state.open ? (state.open = false) : (state.open = true);\r\n    },\r\n  },\r\n});\r\n\r\nexport const { openModal } = modalSlice.actions;\r\n\r\nexport default modalSlice.reducer;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { CONTROLLER_COLOR } from \"../style/color\";\r\nimport Text from \"../atoms/Text\";\r\nimport SettingItemText from \"../block/SettingItemText\";\r\nimport { Button, CssButton } from \"../atoms/\";\r\nimport { useAppSelector, useAppDispatch } from \"../../hooks/index\";\r\nimport {\r\n  updataDisplay,\r\n  updataFlexDirection,\r\n  updataJustifyContent,\r\n  updataAlignItems,\r\n  updataFlexWrap,\r\n  updataAlignContent,\r\n} from \"../../stores/slices/flexSlice\";\r\nimport { openModal } from \"../../stores/slices/modalSlice\";\r\n\r\nconst Controller = React.memo(() => {\r\n  const dispatch = useAppDispatch();\r\n  const flex = useAppSelector((state) => state.flex);\r\n  const {\r\n    display,\r\n    flexDirection,\r\n    justifyContent,\r\n    alignItems,\r\n    flexWrap,\r\n    alignContent,\r\n  } = {\r\n    ...flex,\r\n  };\r\n  const onClickUpdataDisplay = (event: any) =>\r\n    dispatch(updataDisplay(event.target.outerText));\r\n\r\n  const onClickUpdataFlexDirection = (event: any) =>\r\n    dispatch(updataFlexDirection(event.target.outerText));\r\n\r\n  const onClickUpdataJustifyContent = (event: any) =>\r\n    dispatch(updataJustifyContent(event.target.outerText));\r\n\r\n  const onClickUpdataAlignItems = (event: any) =>\r\n    dispatch(updataAlignItems(event.target.outerText));\r\n\r\n  const onClickUpdataFlexWrap = (event: any) =>\r\n    dispatch(updataFlexWrap(event.target.outerText));\r\n\r\n  const onClickUpdataAlignContent = (event: any) =>\r\n    dispatch(updataAlignContent(event.target.outerText));\r\n\r\n  const onClickOpenModal = () => dispatch(openModal());\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Text text='Setting' fontSize={35} textAlign={\"center\"} />\r\n      <List>\r\n        <Row>\r\n          <RowTop>\r\n            <SettingItemText text='Display' subText='親要素の表示形式' />\r\n          </RowTop>\r\n          <RowBottom>\r\n            <Button\r\n              text='flex'\r\n              checked={display}\r\n              onClick={onClickUpdataDisplay}\r\n            />\r\n            <Button\r\n              text='inline-flex'\r\n              checked={display}\r\n              onClick={onClickUpdataDisplay}\r\n            />\r\n          </RowBottom>\r\n        </Row>\r\n        <Row>\r\n          <RowTop>\r\n            <SettingItemText text='flex-direction' subText='主軸の方向や向き' />\r\n          </RowTop>\r\n          <RowBottom>\r\n            <Button\r\n              text='row'\r\n              checked={flexDirection}\r\n              onClick={onClickUpdataFlexDirection}\r\n            />\r\n            <Button\r\n              text='column'\r\n              checked={flexDirection}\r\n              onClick={onClickUpdataFlexDirection}\r\n            />\r\n          </RowBottom>\r\n        </Row>\r\n        <Row>\r\n          <RowTop>\r\n            <SettingItemText text='justify-content' subText='水平方向揃え' />\r\n          </RowTop>\r\n          <RowBottom>\r\n            <Button\r\n              text='flex-start'\r\n              checked={justifyContent}\r\n              onClick={onClickUpdataJustifyContent}\r\n            />\r\n            <Button\r\n              text='flex-end'\r\n              checked={justifyContent}\r\n              onClick={onClickUpdataJustifyContent}\r\n            />\r\n            <Button\r\n              text='center'\r\n              checked={justifyContent}\r\n              onClick={onClickUpdataJustifyContent}\r\n            />\r\n            <Button\r\n              text='space-between'\r\n              checked={justifyContent}\r\n              onClick={onClickUpdataJustifyContent}\r\n            />\r\n            <Button\r\n              text='space-around'\r\n              checked={justifyContent}\r\n              onClick={onClickUpdataJustifyContent}\r\n            />\r\n          </RowBottom>\r\n        </Row>\r\n        <Row>\r\n          <RowTop>\r\n            <SettingItemText text='align-content' subText='垂直方向揃え ' />\r\n          </RowTop>\r\n          <RowBottom>\r\n            <Button\r\n              text='flex-start'\r\n              checked={alignContent}\r\n              onClick={onClickUpdataAlignContent}\r\n            />\r\n            <Button\r\n              text='flex-end'\r\n              checked={alignContent}\r\n              onClick={onClickUpdataAlignContent}\r\n            />\r\n            <Button\r\n              text='center'\r\n              checked={alignContent}\r\n              onClick={onClickUpdataAlignContent}\r\n            />\r\n            <Button\r\n              text='baseline'\r\n              checked={alignContent}\r\n              onClick={onClickUpdataAlignContent}\r\n            />\r\n            <Button\r\n              text='stretch'\r\n              checked={alignContent}\r\n              onClick={onClickUpdataAlignContent}\r\n            />\r\n          </RowBottom>\r\n        </Row>\r\n        <Row>\r\n          <RowTop>\r\n            <SettingItemText text='flex-wrap' subText='子要素の折り返し' />\r\n          </RowTop>\r\n          <RowBottom>\r\n            <Button\r\n              text='nowrap'\r\n              checked={flexWrap}\r\n              onClick={onClickUpdataFlexWrap}\r\n            />\r\n            <Button\r\n              text='wrap'\r\n              checked={flexWrap}\r\n              onClick={onClickUpdataFlexWrap}\r\n            />\r\n            <Button\r\n              text='wrap-reverse'\r\n              checked={flexWrap}\r\n              onClick={onClickUpdataFlexWrap}\r\n            />\r\n          </RowBottom>\r\n        </Row>\r\n        <Row>\r\n          <RowTop>\r\n            <SettingItemText text='align-items' subText='複数行設定' />\r\n          </RowTop>\r\n          <RowBottom>\r\n            <Button\r\n              text='flex-start'\r\n              checked={alignItems}\r\n              onClick={onClickUpdataAlignItems}\r\n            />\r\n            <Button\r\n              text='flex-end'\r\n              checked={alignItems}\r\n              onClick={onClickUpdataAlignItems}\r\n            />\r\n            <Button\r\n              text='center'\r\n              checked={alignItems}\r\n              onClick={onClickUpdataAlignItems}\r\n            />\r\n            <Button\r\n              text='baseline'\r\n              checked={alignItems}\r\n              onClick={onClickUpdataAlignItems}\r\n            />\r\n            <Button\r\n              text='stretch'\r\n              checked={alignItems}\r\n              onClick={onClickUpdataAlignItems}\r\n            />\r\n          </RowBottom>\r\n        </Row>\r\n        <Row>\r\n          <Center>\r\n            <CssButton onClick={onClickOpenModal} />\r\n          </Center>\r\n        </Row>\r\n      </List>\r\n    </Wrapper>\r\n  );\r\n});\r\n\r\nconst Wrapper = styled.div`\r\n  border-radius: 15px;\r\n  background-color: ${CONTROLLER_COLOR};\r\n  padding: 5px 10px 20px;\r\n  background: rgba(192, 221, 255, 0.2);\r\n  box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);\r\n  backdrop-filter: blur(9px);\r\n  -webkit-backdrop-filter: blur(20px);\r\n  border-radius: 10px;\r\n  border: 1px solid rgba(255, 255, 255, 0.18);\r\n`;\r\n\r\nconst List = styled.ul`\r\n  display: flex:\r\n  flex-direction: colum;\r\n  `;\r\n\r\nconst Row = styled.li`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-item: left;\r\n  padding: 0.8em 0 0;\r\n`;\r\n\r\nconst RowTop = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nconst RowBottom = styled.div`\r\n  width: 100%;\r\n  margin: 0.5em 0 0 0;\r\n  display: flex;\r\n  justify-content: space-around;\r\n  background-color: #4687de;\r\n  padding: 2px 2px;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst Center = styled.div`\r\n  display: flex;\r\n  align-item: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport default Controller;\r\n","export const PRIMRY_COLOR: string = \"#2F6ED3\";\r\nexport const SHADOW_COLOR: string = \"rgba( 31, 38, 135, 0.37 )\";\r\nexport const CONTROLLER_COLOR: string = \"rgb(33,58,90, 0.3);\";\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { SHADOW_COLOR } from \"../style/color\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <HeaderC>\r\n      <Title>Flex Genereter</Title>\r\n    </HeaderC>\r\n  );\r\n};\r\n\r\nconst HeaderC = styled.header`\r\n  width: 100%;\r\n  height: 90px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  text-align: center;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  text-shadow: 0 3px 5px ${SHADOW_COLOR};\r\n  color: #fff;\r\n  font-size: 40px;\r\n`;\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Text } from \"../atoms\";\r\nimport styled from \"styled-components\";\r\n\r\ntype propType = {\r\n  child: number;\r\n  i: number;\r\n};\r\n\r\nconst BlockBox: React.FC<propType> = React.memo(({ child, i }) => {\r\n  return (\r\n    <Block key={i}>\r\n      <Text text={String(child)} fontSize={20} textAlign='center' />\r\n    </Block>\r\n  );\r\n});\r\n\r\nconst Block = styled.div`\r\n  width: calc(100% / 4 - 40px);\r\n  min-width: 50px;\r\n  height: 90px;\r\n  background: rgba(223, 204, 229, 0.2);\r\n  box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);\r\n  backdrop-filter: blur(3px);\r\n  -webkit-backdrop-filter: blur(3px);\r\n  border-radius: 10px;\r\n  border: 1px solid rgba(255, 255, 255, 0.18);\r\n  display: flex;\r\n  align-item: center;\r\n  justify-content: center;\r\n  transition: 1s;\r\n`;\r\n\r\nexport default BlockBox;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Text } from \"../atoms\";\r\nimport { useAppDispatch, useAppSelector } from \"../../hooks\";\r\nimport { openModal } from \"../../stores/slices/modalSlice\";\r\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\r\nimport { a11yDark } from \"react-syntax-highlighter/dist/esm/styles/prism\";\r\n\r\ntype propType = {\r\n  open: boolean;\r\n};\r\n\r\nconst ViewCode: React.FC<propType> = ({ open }) => {\r\n  const dispatch = useAppDispatch();\r\n  const flex = useAppSelector((state) => state.flex);\r\n  const {\r\n    display,\r\n    flexDirection,\r\n    justifyContent,\r\n    alignItems,\r\n    flexWrap,\r\n    alignContent,\r\n  } = {\r\n    ...flex,\r\n  };\r\n\r\n  const onClickCloseModal = () => dispatch(openModal());\r\n\r\n  const initialValue: any = {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"flex-start\",\r\n    alignItems: \"normal\",\r\n    flexWrap: \"nowrap\",\r\n    alignContent: \"flex-start\",\r\n  };\r\n\r\n  const codeString = `.flex-container {\r\n    display: ${display};\r\n    flex-direction: ${flexDirection};\r\n    align-content: ${alignContent};\r\n    justify-content: ${justifyContent};\r\n    flex-wrap: ${flexWrap};\r\n    align-items: ${alignItems};\r\n  }`;\r\n\r\n  return (\r\n    <Wrapper isOpen={open}>\r\n      <Container>\r\n        <Text text='CSS' fontSize={30} textAlign='center' />\r\n        <SyntaxHighlighter language='css' style={a11yDark}>\r\n          {codeString}\r\n        </SyntaxHighlighter>\r\n      </Container>\r\n      <Overlay onClick={onClickCloseModal} />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled.div<{\r\n  isOpen: boolean;\r\n}>`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  transform: scale(0, 0);\r\n  opacity: 0\r\n  transition: 0.1s;\r\n\r\n\r\n  ${({ isOpen }) =>\r\n    isOpen &&\r\n    `\r\n    transition: 0.1s;\r\n    transform: scale(1, 1);\r\n    opacity: 1;\r\n`}\r\n`;\r\n\r\nconst Overlay = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  backdrop-filter: blur(0.5px);\r\n  background-color: #0001307e;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  position: absolute;\r\n  width: 500px;\r\n  background-color: #1b1b1b;\r\n  border-radius: 10px;\r\n  z-index: 100;\r\n  text-align: center;\r\n  box-shadow: 0 8px 52px 0 rgba(31, 38, 135, 0.37);\r\n  color: yellow;\r\n  padding: 0 0 30px;\r\n`;\r\n\r\nexport default ViewCode;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\ntype countType = {\r\n  // count: number;\r\n  flexChild: number[];\r\n};\r\n\r\nconst initialState: countType = {\r\n  flexChild: [1, 2, 3],\r\n};\r\n\r\nconst countSlice = createSlice({\r\n  name: \"hogeState\",\r\n  initialState,\r\n  reducers: {\r\n    addFlexChild: (state) => {\r\n      const addNumber: number = state.flexChild.length + 1;\r\n      state.flexChild = [...state.flexChild, addNumber];\r\n    },\r\n    removeFlexChild: (state) => {\r\n      const newArray: number[] = [...state.flexChild];\r\n      newArray.pop();\r\n      state.flexChild = newArray;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addFlexChild, removeFlexChild } = countSlice.actions;\r\nexport default countSlice.reducer;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { FlexChild } from \"../block/\";\r\nimport { AddButton, RemoveButton } from \"../atoms/\";\r\nimport { useAppSelector, useAppDispatch } from \"../../hooks/\";\r\nimport { addFlexChild, removeFlexChild } from \"../../stores/slices/countSlice\";\r\n\r\nconst FlexParent = React.memo(() => {\r\n  const flexChilds = useAppSelector((state) => state.count.flexChild);\r\n  const flex = useAppSelector((state) => state.flex);\r\n  const dispatch = useAppDispatch();\r\n  const onClickAddFlexChild = () => dispatch(addFlexChild());\r\n  const onClickReomveFlexChild = () => dispatch(removeFlexChild());\r\n  return (\r\n    <Wrapper>\r\n      <FlexWrapper\r\n        displayS={flex.display}\r\n        flexDirection={flex.flexDirection}\r\n        justifyContent={flex.justifyContent}\r\n        alignItems={flex.alignItems}\r\n        alignContent={flex.alignContent}\r\n        flexWrap={flex.flexWrap}\r\n      >\r\n        {flexChilds.map((child, i) => {\r\n          return <FlexChild i={i} child={child} />;\r\n        })}\r\n      </FlexWrapper>\r\n      <ButtonWrapper>\r\n        <AddButton onClick={onClickAddFlexChild} />\r\n        <Space />\r\n        <RemoveButton onClick={onClickReomveFlexChild} />\r\n      </ButtonWrapper>\r\n    </Wrapper>\r\n  );\r\n});\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nconst FlexWrapper = styled.div<{\r\n  displayS: string;\r\n  flexDirection: string;\r\n  justifyContent: string;\r\n  alignItems: string;\r\n  alignContent: string;\r\n  flexWrap: string;\r\n}>`\r\n  width: 100%;\r\n  min-height: 50vh;\r\n  padding: 30px;\r\n  border-radius: 11px;\r\n  background: #75ff7e6c;\r\n  box-shadow: inset 10px 10px 20px #75ff7e4b, inset -10px -10px 20px #75ff7e42;\r\n  display: ${({ displayS }) =>\r\n    typeof displayS === \"string\" ? displayS : null};\r\n  flex-direction: ${({ flexDirection }) =>\r\n    typeof flexDirection === \"string\" ? flexDirection : null};\r\n  justify-content: ${({ justifyContent }) =>\r\n    typeof justifyContent === \"string\" ? justifyContent : null};\r\n  align-items: ${({ alignItems }) =>\r\n    typeof alignItems === \"string\" ? alignItems : null};\r\n  flex-wrap: ${({ flexWrap }) =>\r\n    typeof flexWrap === \"string\" ? flexWrap : null};\r\n  align-content: ${({ alignContent }) =>\r\n    typeof alignContent === \"string\" ? alignContent : null};\r\n  gap: 20px;\r\n`;\r\n\r\nconst ButtonWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  width: 100%;\r\n  padding: 30px;\r\n`;\r\n\r\nconst Space = styled.div`\r\n  width: 30px;\r\n`;\r\n\r\nexport default FlexParent;\r\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { FlexParent, Controller } from \"./components/modules/\";\nimport { Header, ViewCode } from \"./components/block\";\nimport { useAppSelector } from \"./hooks/\";\n\nconst App = () => {\n  const modalState = useAppSelector((state) => state.modal);\n\n  return (\n    <>\n      <Wrapper>\n        <Header />\n        <Space />\n        <Flex>\n          <FlexLeft>\n            <FlexParent />\n          </FlexLeft>\n          <FlexRight>\n            <Controller />\n          </FlexRight>\n        </Flex>\n        <ViewCode open={modalState.open} />\n      </Wrapper>\n    </>\n  );\n};\n\nconst Wrapper = styled.div`\n  position: relative;\n  width: 100%;\n`;\n\nconst Space = styled.div`\n  height: 40px;\n`;\n\nconst Flex = styled.div`\n  display: flex;\n  justify-content: space-around;\n  width: 100%;\n  padding: 0 10px;\n`;\n\nconst FlexLeft = styled.div`\n  width: 40%;\n  transition: 1s;\n`;\n\nconst FlexRight = styled.div`\n  width: 45%;\n`;\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport flexSlice from \"./slices/flexSlice\";\r\nimport countSlice from \"./slices/countSlice\";\r\nimport modalDlice from \"./slices/modalSlice\";\r\n\r\nconst store = configureStore({\r\n  reducer: { flex: flexSlice, count: countSlice, modal: modalDlice },\r\n});\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n\r\nexport default store;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./stores/index\";\nimport { Provider } from \"react-redux\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}